[{"C:\\Users\\Robert_Ostaszewski\\vscodeprojects\\shopping-list\\src\\index.js":"1","C:\\Users\\Robert_Ostaszewski\\vscodeprojects\\shopping-list\\src\\reportWebVitals.js":"2","C:\\Users\\Robert_Ostaszewski\\vscodeprojects\\shopping-list\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":6143,"mtime":1615154347156,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1rfe04f",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\Robert_Ostaszewski\\vscodeprojects\\shopping-list\\src\\index.js",[],["16","17"],"C:\\Users\\Robert_Ostaszewski\\vscodeprojects\\shopping-list\\src\\reportWebVitals.js",[],"C:\\Users\\Robert_Ostaszewski\\vscodeprojects\\shopping-list\\src\\App.js",["18"],"import React from 'react';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport { useHistory } from \"react-router-dom\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nconst URL = 'http://localhost:8080/rest'\n\n\nconst App = () => {\n\n  const [authHeader, setAuth] = React.useState(new Headers({\n  }));\n  const [userName, setText] = React.useState(\"\");\n  const [pass, setPass] = React.useState(\"\");\n \n  const onLogin = (username, pass) => {\n    setAuth(new Headers({\n      'Authorization': 'Basic ' + Buffer.from(`${username}:${pass}`).toString('base64')\n    }));\n    setText(username);\n    setPass(pass);\n  }\n\n  return (\n    <Router>\n\n        <Switch>\n          <Route path=\"/app\">\n          <MainApp authHeader={authHeader} user={userName} pass={pass}/>\n          </Route>\n          <Route path=\"/\">\n            <Login onLogin={onLogin}/>\n          </Route>\n        </Switch>\n    </Router>\n  );\n};\n\nconst MainApp = ({ authHeader, user, pass }) => {\n  const socket = new SockJS('http://localhost:8080/gs-guide-websocket');\n  const client = Stomp.over(socket)\n  const [featchedLists, setLists] = React.useState([]);\n  const [products, setProducts] = React.useState([]);\n\n  const fetchh = (url, method) =>\n    fetch(url, { method: method, headers: authHeader })\n\n  React.useEffect(() => {\n    const fetchJson = (url, method) =>\n      fetch(url, { method: method, headers: authHeader}).then(response => response.json())\n\n    const updateProducts = listId =>\n      fetchJson(`${URL}/lists/${listId}/products`, 'GET')\n        .then(result => setProducts(p => [...result, ...p.filter(product => product.listId !== listId)]))\n\n      fetchJson(`${URL}/lists`, 'GET')\n      .then(lists => {\n        setLists(lists)\n        lists.forEach(list => updateProducts(list.id))\n        client.connect(`${user}`, `${pass}`, frame => {\n\n          lists.forEach(list => {\n            client.subscribe(`/topic/${list.id}`, msg => updateProducts(list.id))\n          })\n          client.subscribe(\"/topic/me\", msg =>\n          fetchJson(`${URL}/lists`, 'GET')\n            .then(lists => {\n              setLists(lists)\n              lists.forEach(list => {\n                updateProducts(list.id)\n              client.subscribe(`/topic/${msg.body}`, msgq => updateProducts(msg.body))\n              })\n            }))\n        })\n      })\n  \n  }, [authHeader, user, pass]);\n\n  const addProductMethod = (listId, productName) => {\n    fetchh(`${URL}/lists/${listId}?productName=${productName}`, 'PUT')\n  }\n\n  const deleteMethod = (listId, productId) => {\n\n    fetchh(`${URL}/lists/${listId}/${productId}`, 'DELETE')\n  }\n\n  const addListMethod = (listName) => {\n\n    fetchh(`${URL}/lists?listName=${listName}`, 'PUT')\n  }\n\n  const deleteListMethod = (listId) => {\n\n    fetchh(`${URL}/lists/${listId}`, 'DELETE')\n\n    client.unsubscribe(`/topic/${listId}`)\n  }\n  \n  return(\n    < div >\n    <h1>Shopping app</h1>\n    <hr />\n    <Adder label=\"Add List: \" addtMethod={addListMethod} />\n    <List lists={featchedLists} allProducts={products} onAddProduct={addProductMethod} onDelete={deleteMethod} listDelete={deleteListMethod} />\n  </div >\n  )\n}\n\nconst Login = ({ onLogin }) => {\n  const history = useHistory();\n  const [userName, setText] = React.useState();\n  const [pass, setPass] = React.useState();\n\n  return (\n    <>\n      <label>Login</label>\n      <input type=\"text\" onChange={event => setText(event.target.value)} />\n      <label>Pass</label>\n      <input type=\"text\" onChange={event => setPass(event.target.value)} />\n      <button onClick={() =>  {\n        onLogin(userName, pass) \n        history.push(\"/app\")\n      }}>\n          Submit\n        </button>\n    </>\n  )\n}\n\nconst List = ({ lists, allProducts, onAddProduct, onDelete, listDelete }) =>\n  <table style={{ border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n    <thead>\n      <tr style={{ border: \"1px solid black\", borderCollapse: \"collapse\" }}>\n        <th >Name</th>\n        <th >Number of elements in the list</th>\n        <th ></th>\n        <th ></th>\n      </tr>\n    </thead>\n    <tbody style={{ textAlign: 'center', verticalAlign: 'middle' }}>\n      {\n        lists.map(list =>\n          <ListEntry key={list.id} list={list} products={allProducts.filter(product => product.listId === list.id)} onAddProduct={onAddProduct} onDelete={onDelete} listDelete={listDelete} />\n        )\n      }\n    </tbody>\n  </table>\n\n\nconst ListEntry = ({ list, products, onAddProduct, onDelete, listDelete }) => {\n\n  const [isClicked, click] = React.useState(false)\n\n  return (\n    <>\n      <tr style={{ border: \"1px solid black\" }}>\n        <td >{list.listName}</td>\n        <td >{products.length}</td>\n        <td >\n          <button onClick={() => click(c => !c)} > {!isClicked ? \"Expand\" : \"Collapse\"}</button>\n        </td>\n        <td><button onClick={() => listDelete(list.id)}>Delete</button></td>\n      </tr>\n      {\n        isClicked && <ProductList listId={list.id} products={products} onAddProduct={onAddProduct} onDelete={onDelete} />\n      }\n    </>\n  )\n}\n\nconst ProductList = ({ listId, products, onAddProduct, onDelete }) => {\n  const deleteProduct = productId => onDelete(listId, productId)\n  const addProduct = productName => onAddProduct(listId, productName)\n  console.log(products)\n  return (\n    <tr>\n      <td colSpan=\"4\">\n        <ol>\n          {\n            products.map(product =>\n              <ProductEntry key={product.productId} product={product} deleteProduct={deleteProduct} />\n            )\n          }\n        </ol>\n        <Adder label=\"Add product: \" addtMethod={addProduct} />\n      </td>\n    </tr>\n  )\n}\n\n\nconst ProductEntry = ({ product, deleteProduct }) =>\n  <li>\n    <span>{product.name}</span>\n    <button style={{ float: \"right\" }} onClick={() => deleteProduct(product.productId)} >Delete</button>\n  </li>\n\n\nconst Adder = ({ addtMethod, label }) => {\n\n  const [text, setText] = React.useState();\n\n  return (\n    <>\n      <label>{label}</label>\n      <input type=\"text\" onChange={event => setText(event.target.value)} />\n      <button onClick={() => addtMethod(text)}>Submit</button>\n    </>\n  )\n}\n\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":83,"column":6,"nodeType":"25","endLine":83,"endColumn":30,"suggestions":"26"},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'client'. Either include it or remove the dependency array.","ArrayExpression",["29"],"no-global-assign","no-unsafe-negation",{"desc":"30","fix":"31"},"Update the dependencies array to be: [authHeader, user, pass, client]",{"range":"32","text":"33"},[2374,2398],"[authHeader, user, pass, client]"]